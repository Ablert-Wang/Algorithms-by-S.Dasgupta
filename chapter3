3.1
A->B is a tree edge
B->C is a tree edge
C->F is a tree edge
F->E is a tree edge
F->I is a tree edge
E->B is a back edge
E->A is a back edge
prev = [0, 1, 2, -1, 4, 3, -1, -1, 6]
post = 11, 10, 9, -1, 5, 8, -1, -1, 7]

D->G is a tree edge
G->H is a tree edge
H->D is a back edge
prev = [0, 1, 2, 12, 4, 3, 13, 14, 6]
post = [11, 10, 9, 17, 5, 8, 16, 15, 7] 

3.2
(a)
A->B is a tree edge
B->C is a tree edge
C->D is a tree edge
D->B is a back edge
D->H is a tree edge
H->G is a tree edge
G->F is a tree edge
F->E is a tree edge
A->F is a forward edge
B->E is a forward edge
E->G is a backward edge
E->D is a backward edge
prev = [0, 1, 2, 3, 7, 6, 5, 4]
post = [15, 14, 13, 12, 8, 9, 10, 11]
(b) 
Do I really want to do this? I think I grasp this point already

3.3
(a) Not sure what the dfs based topo algo is .Oh got it, sort in decreasing
    order of post values.
    B,A,C,E,D,F,H,G... Yay!
    prev = [0, 14, 1, 2, 10, 3, 4, 6, -1]
    post = [13, 15, 12, 9, 11, 8, 5, 7, -1]

(b) A and B are the sources, G and H are the sinks
(c) (A/B)->C->(D/E)->F->(G/H)
(d) it has 8 possible topological orderings

3.4

